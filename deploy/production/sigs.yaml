---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: sigs-ingress
  namespace: sigs-production
  labels:
    app: sigs-production
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
  - host: sigs.lappis.rocks
    http:
      paths:
      - backend:
          serviceName: sigs-production-svc
          servicePort: 80
  tls:
  - hosts:
    - sigs.lappis.rocks
    secretName: sigs-production-letsencrypt-prod-crt
---
apiVersion: v1
kind: Service
metadata:
  name: sigs-production-svc
  namespace: sigs-production
  labels:
    app: sigs-production
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: sigs-production
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: sigs-deployment
  namespace: sigs-production
  labels:
    app: sigs-production
spec:
  selector:
    matchLabels:
      app: sigs-production
  replicas: 1
  template:
    metadata:
      labels:
        app: sigs-production
    spec:
      containers:
      - name: sigs-production
        image: projetosigs/sigs-gces:stable
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: "sigs-production-secrets"
              key: "app-secret-key"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: "sigs-production-secrets"
              key: "db-user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "sigs-production-secrets"
              key: "db-user-pass"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "SIGS_production"
        - name: POSTGRES_HOST
          value: postgres-production-svc
        - name: SIGS_DOMAIN
          value: sigs.lappis.rocks